// Generated by CoffeeScript 1.11.1
(function() {
  var chalk, checkState, conf, i, len, parse, rainbow, ref, request, state, word;

  conf = require("./config.json");

  chalk = require('chalk');

  rainbow = require('chalk-rainbow');

  request = require('request');

  state = {
    data: [
      {
        from: {
          name: "you what fam",
          text: "you what"
        }
      }
    ]
  };

  console.log(chalk.blue("Starting tracker for "));

  ref = conf.keywords;
  for (i = 0, len = ref.length; i < len; i++) {
    word = ref[i];
    console.log(word);
  }

  parse = function() {
    var tmp, xml;
    tmp = [];
    xml = "";
    return request('https://graph.facebook.com/352110954925626/feed?access_token=' + conf.token + "&fields=created_time, from, message", (function(error, response, body) {
      return checkState(JSON.parse(body));
    }));
  };

  checkState = function(tmp) {
    var j, key, len1, post, results, words;
    if (tmp.data[0].from.name !== state.data[0].from.name) {
      state = tmp;
      console.log("New post by " + state.data[0].from.name);
      post = state.data[0];
      words = post.message.split(" ");
      results = [];
      for (j = 0, len1 = words.length; j < len1; j++) {
        word = words[j];
        results.push((function() {
          var k, len2, ref1, results1;
          ref1 = conf.keywords;
          results1 = [];
          for (k = 0, len2 = ref1.length; k < len2; k++) {
            key = ref1[k];
            if (key === word) {
              console.log(rainbow('Found ' + word + ' in post by: ' + post.from.name));
              results1.push(console.log('Post: ' + post.message));
            } else {
              results1.push(void 0);
            }
          }
          return results1;
        })());
      }
      return results;
    }
  };

  setInterval((function() {
    return parse();
  }), 3000);

}).call(this);
